<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ayuan</groupId>
    <version>${revision}</version>
    <artifactId>ayuan-dependencies</artifactId>
    <packaging>pom</packaging>

    <name>${project.artifactId}</name>
    <description>基础 bom 文件，管理整个项目的依赖版本</description>
    <url>https://github.com/OopsAYuan/AYuan_Boot</url>

    <properties>
        <revision>1.0.0-jdk8-SNAPSHOT</revision>
        <flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>
        <!-- 统一依赖管理 -->
        <spring.framework.version>5.3.39</spring.framework.version>
        <spring.security.version>5.8.14</spring.security.version>
        <spring.boot.version>2.7.18</spring.boot.version>
        <!-- Web 相关 -->
        <springdoc.version>1.7.0</springdoc.version>
        <knife4j.version>4.5.0</knife4j.version>
        <servlet.versoin>2.5</servlet.versoin>
        <!-- DB 相关 -->
        <druid.version>1.2.23</druid.version><!-- 阿里数据库连接池 -->
        <mybatis.version>3.5.16</mybatis.version>
        <mybatis-plus.version>3.5.7</mybatis-plus.version> <!-- MyBatis Plus 3.5.8 需要最低 JDK11 版本，无法升级 -->
        <dynamic-datasource.version>4.3.1</dynamic-datasource.version><!-- 动态数据源 -->
        <mybatis-plus-join.version>1.4.13</mybatis-plus-join.version>
        <easy-trans.version>3.0.6</easy-trans.version><!-- @Trans 数据翻译 -->
        <redisson.version>3.36.0</redisson.version><!-- Redis 第三方库 -->
        <!-- 工具类相关 -->
        <captcha-plus.version>1.0.10</captcha-plus.version><!-- 行为验证码 -->
        <jsoup.version>1.18.1</jsoup.version><!-- HTML解析器 -->
        <lombok.version>1.18.34</lombok.version>
        <mapstruct.version>1.6.2</mapstruct.version><!-- @Mapper 为 Car 和 CarDto 之间的每个具有相同名称和类型的属性生成映射代码。 -->
        <hutool.version>5.8.32</hutool.version><!-- Java工具类库，通过静态方法封装 -->
        <easyexcel.verion>4.0.3</easyexcel.verion><!-- Excel 表格 -->
        <velocity.version>2.4</velocity.version><!-- 模板引擎 -->
        <fastjson.version>1.2.83</fastjson.version><!-- JSON 处理库 -->
        <guava.version>33.2.1-jre</guava.version><!-- 数据类型的工具集 -->
        <transmittable-thread-local.version>2.14.5</transmittable-thread-local.version><!-- TTL 允许 ThreadLocal 变量在跨线程执行时进行传递和传播。 -->
        <commons-net.version>3.11.1</commons-net.version>
        <jsch.version>0.1.55</jsch.version><!-- SSH 操作 -->
        <tika-core.version>2.9.2</tika-core.version><!-- 文件内容分析工具包 -->
        <ip2region.version>2.7.0</ip2region.version><!-- 离线 IP 地址定位库与数据管理框架 -->
        <bizlog-sdk.version>3.0.6</bizlog-sdk.version><!-- @LogRecord 通用操作日志组件 -->
        <netty.version>4.1.113.Final</netty.version><!-- NIO框架 -->
        <mqtt.version>1.2.5</mqtt.version><!-- 轻量级物联网消息传输协议 -->
        <!-- 专属于 JDK8 安全漏洞升级 -->
        <logback.version>1.2.13</logback.version> <!-- 无法使用 1.3.X 版本，启动会报错 -->
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- 统一依赖管理 -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-bom</artifactId>
                <version>${netty.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId> <!-- JDK8 版本独有：保证 Spring Framework 尽量高 -->
                <version>${spring.framework.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-bom</artifactId> <!-- JDK8 版本独有：保证 Spring Security 尽量高 -->
                <version>${spring.security.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Spring 核心 -->
            <dependency>
                <!-- 用于生成自定义的 Spring @ConfigurationProperties 配置类的说明文件 -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <!-- Web 相关 -->
            <dependency>
                <groupId>com.ayuan</groupId>
                <artifactId>ayuan-starter-web</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.ayuan</groupId>
                <artifactId>ayuan-starter-security</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- 专属于 JDK8 安全漏洞升级 -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- 统一 revision 版本 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten-maven-plugin.version}</version>
                <configuration>
                    <flattenMode>bom</flattenMode>
                    <updatePomFile>true</updatePomFile>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                    </execution>
                    <execution>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>